@model PruebaTecnica.DTO.Console.CreateConsoleDTO



<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<style>
    body {
        background-color: #f8f9fa;
    }

    .form-container {
        background-color: #ffffff;
        padding: 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
        font-size: 2rem;
        margin-bottom: 1.5rem;
    }

    .btn-custom {
        background-color: #28a745;
        color: #fff;
    }

        .btn-custom:hover {
            background-color: #218838;
        }

    .form-control {
        height: 50px; /* Aumentar altura de inputs */
        font-size: 1rem; /* Aumentar tamaño de fuente */
    }

    .form-textarea {
        height: 150px; /* Altura específica para el textarea */
    }
</style>

<div class="container mt-5">
    <div class="form-container">
        <h1 class="text-center">Crear Consola</h1>

        @using (Html.BeginForm("Create", "Console", FormMethod.Post, new { @class = "mt-4" }))
        {
            @Html.AntiForgeryToken()

            <div class="row mb-3">

                <div class="col-8">
                    @Html.LabelFor(m => m.Name, "Nombre de la Consola", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Ingrese el nombre de la consola" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-4">
                    @Html.LabelFor(m => m.BrandId, "Marca", new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.BrandId, new SelectList(Model.Brands, "Id", "Description"), new { @class = "form-select"})
                    @Html.ValidationMessageFor(m => m.BrandId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col">
                    @Html.LabelFor(m => m.StorageCapacity, "Capacidad de Almacenamiento (GB)", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.StorageCapacity, new { @class = "form-control", type = "number", placeholder = "Capacidad en GB" })
                    @Html.ValidationMessageFor(m => m.StorageCapacity, "", new { @class = "text-danger" })
                </div>
                <div class="col">
                    @Html.LabelFor(m => m.ReleaseDate, "Fecha de Lanzamiento", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.ReleaseDate, "{0:dd/MM/yyyy}", new { @class = "form-control", type = "text", id = "releaseDate" })
                    @Html.ValidationMessageFor(m => m.ReleaseDate, "", new { @class = "text-danger" })
                </div>
                <div class="col">
                    @Html.LabelFor(m => m.Price, "Precio (USD)", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", step = "0.01", placeholder = "Precio en USD" })
                    @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Comment, "Comentario", new { @class = "form-label" })
                @Html.TextAreaFor(m => m.Comment, new { @class = "form-control form-textarea", placeholder = "Descripción de la consola" })
                @Html.ValidationMessageFor(m => m.Comment, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex justify-content-between">
                <a href="@Url.Action("Index", "Console")" class="btn btn-secondary">Cancelar</a>
                <button type="submit" class="btn btn-custom"><i class="fas fa-plus-circle"></i> Crear Consola</button>

            </div>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>


<script>
    $(document).ready(function () {


        $('#releaseDate').datepicker({
            dateFormat: 'dd/mm/yy', // Formato del datepicker
            changeMonth: true,
            changeYear: true,
            maxDate: 0 // No permitir seleccionar fechas futuras
        });

        // Establecer la fecha de hoy como valor por defecto
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0'); // Enero es 0
        var yyyy = today.getFullYear();

        today = dd + '/' + mm + '/' + yyyy;
        $('#releaseDate').val(today);
    });
</script>
